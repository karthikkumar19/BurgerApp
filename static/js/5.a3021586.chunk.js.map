{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","display","margin","border","padding","key","className","classes","Order","Number","parseFloat","price","toFixed","Orders","state","orders","loading","this","onFetchOrders","token","userId","Spinner","id","Component","connect","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,MAAQ,uB,yHCmCXC,EAhCD,SAAEC,GACZ,IAAMC,EAAc,GAEpB,IAAM,IAAIC,KAAkBF,EAAMC,YAC9BA,EAAYE,KACR,CACIC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAKtC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OAAO,0BACHC,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,OAEbC,IAAKP,EAAGJ,MAAOI,EAAGJ,KARf,KAQuBI,EAAGH,OAR1B,QAWX,OACI,yBAAKW,UAAWC,IAAQC,OACpB,2CAAiBZ,GACjB,qCAAU,uCAAaa,OAAOC,WAAYpB,EAAMqB,OAAQC,QAAS,O,gCCvBvEC,E,2MACFC,MAAQ,CACJC,OAAQ,GACRC,SAAS,G,mFAIVC,KAAK3B,MAAM4B,cAAcD,KAAK3B,MAAM6B,MAAMF,KAAK3B,MAAM8B,U,+BAIpD,IAAIL,EAAS,kBAACM,EAAA,EAAD,MAWb,OAVIJ,KAAK3B,MAAM0B,UACXD,EACIE,KAAK3B,MAAMyB,OAAOlB,KAAI,SAAAR,GAAK,OACvB,kBAACmB,EAAD,CACIH,IAAKhB,EAAMiC,GACX/B,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,YAKzB,6BACKI,O,GAxBIQ,aA6CNC,uBAfS,SAAAV,GACpB,MAAM,CACFC,OAAOD,EAAMzB,MAAM0B,OACnBC,QAAQF,EAAMzB,MAAM2B,QACpBG,MAAML,EAAMW,KAAKN,MACjBC,OAAON,EAAMW,KAAKL,WAIC,SAAAM,GACvB,MAAM,CACFR,cAAgB,SAACC,EAAOC,GAAR,OAAmBM,EAASC,IAAmBR,EAAOC,QAI/DI,CAA6CI,YAAiBf,EAAQgB","file":"static/js/5.a3021586.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","import React from 'react';\n\nimport classes from './Order.module.css';\n\nconst order = ( props ) => {\n    const ingredients = [];\n\n    for ( let ingredientName in props.ingredients ) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                amount: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '0 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n                }}\n            key={ig.name}>{ig.name} ({ig.amount})</span>;\n    });\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\n        </div>\n    );\n};\n\nexport default order;","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n\n    componentDidMount() {\n       this.props.onFetchOrders(this.props.token,this.props.userId);\n    }\n\n    render () {\n        let orders = <Spinner/>\n        if(!this.props.loading){\n            orders = \n                this.props.orders.map(order => (\n                    <Order \n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price} />\n                ))\n            \n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return{\n        orders:state.order.orders,\n        loading:state.order.loading,\n        token:state.auth.token,\n        userId:state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return{\n        onFetchOrders : (token, userId) => dispatch(actions.fetchOrder(token, userId))\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps) (withErrorHandler(Orders, axios));"],"sourceRoot":""}